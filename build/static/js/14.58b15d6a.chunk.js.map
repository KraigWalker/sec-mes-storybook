{"version":3,"sources":["features/routes/AppRouter/SecureMessagesRoutes.jsx"],"names":["NewSecureMessageView","loadable","SecureMessagesListView","ViewSecureMessageView","ReplySecureMessageView","SecureMessagesRoutes","path","useRouteMatch","fallback","strict","exact","component"],"mappings":"yIAAA,gGAOMA,EAAuBC,aAAS,kBACpC,iCAEIC,EAAyBD,aAAS,kBACtC,iCAEIE,EAAwBF,aAAS,kBACrC,iCAEIG,EAAyBH,aAAS,kBACtC,kCAcF,SAASI,IAAuB,IAIxBC,EAASC,cAATD,KACN,OACE,cAAC,WAAD,CAAUE,SAAU,kBAAM,MAA1B,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEC,QAAM,EACNC,OAAK,EACLJ,KAAI,UAAKA,EAAL,QACJK,UAAWX,IAYb,cAAC,IAAD,CACES,QAAM,EACNC,OAAK,EACLJ,KAAI,UAAKA,EAAL,UACJK,UAAWP,IAMb,cAAC,IAAD,CACEK,QAAM,EACNC,OAAK,EACLJ,KAAI,UAAKA,EAAL,aACJK,UAAWR,IAEb,cAAC,IAAD,CAAOG,KAAI,IAAOK,UAAWT","file":"static/js/14.58b15d6a.chunk.js","sourcesContent":["import { Suspense } from 'react';\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\nimport loadable from '@loadable/component';\n\n//const DraftSecureMessageView = loadable(() =>\n//  import('../../messages/views/DraftSecureMessageView')\n//);\nconst NewSecureMessageView = loadable(() =>\n  import('../../messages/views/NewSecureMessageView')\n);\nconst SecureMessagesListView = loadable(() =>\n  import('../../messages/views/SecureMessageListView')\n);\nconst ViewSecureMessageView = loadable(() =>\n  import('../../messages/views/ViewSecureMessageView')\n);\nconst ReplySecureMessageView = loadable(() =>\n  import('../../messages/views/ReplySecureMessageView')\n);\n\n/**\n *@todo consider hoisting this to AppRouter\n *const ErrorView = loadable(\n *  import('')\n * );\n */\n\n/**\n * @todo instead of /view, have the url == /:id for better history?\n */\n\nfunction SecureMessagesRoutes() {\n  // The `path` lets us build <Route> paths that are\n  // relative to the parent route, while the `url` lets\n  // us build relative links.\n  let { path } = useRouteMatch();\n  return (\n    <Suspense fallback={() => null}>\n      <Switch>\n        <Route\n          strict\n          exact\n          path={`${path}/new`}\n          component={NewSecureMessageView}\n        />\n        {/*<Route\n          strict\n          exact\n          path={`${path}/draft`}\n          component={DraftSecureMessageView}\n        />*}\n        {/**\n         * @todo consider the possible /:messageId/reply in tandem with changes\n         * to the `/view` behaviour discussed below\n         */}\n        <Route\n          strict\n          exact\n          path={`${path}/reply`}\n          component={ReplySecureMessageView}\n        />\n        {/**\n         * @todo Redirect `/view` without a messageId to inbox (List View).\n         * @todo Redirect urls missing `/view` but have a messageId.\n         */}\n        <Route\n          strict\n          exact\n          path={`${path}/view/:id`}\n          component={ViewSecureMessageView}\n        />\n        <Route path={`*`} component={SecureMessagesListView} />\n        {/*<Route path={`${path}/error`} />*/}\n      </Switch>\n    </Suspense>\n  );\n}\n\nexport { SecureMessagesRoutes };\n"],"sourceRoot":""}