// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Main snapshot should match to snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ViewMessage
    activeTab="SENT"
    content={
      Object {
        "sentPageTitle": "sentPageTitle",
      }
    }
    location={
      Object {
        "messageDetail": Object {
          "status": "sent",
        },
      }
    }
    messages={
      Object {
        "draftError": true,
        "filter": [MockFunction],
        "successModal": true,
      }
    }
    messagesFetched={
      Object {
        "fetching": false,
        "successModal": false,
      }
    }
    setMessageRead={[MockFunction]}
    setViewMessageDetail={
      [MockFunction] {
        "calls": Array [
          Array [
            Object {
              "status": "sent",
            },
          ],
        ],
      }
    }
    successModal={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Container
          size={undefined}
        >
          <Row>
            <Card
              bordered={false}
            >
              <SectionHeading
                className="u-margin-bottom-2"
                heading1={undefined}
              />
              <Connect(withRouter(withMessaging))
                activeTab="SENT"
                basePath="http://localhost"
                content={
                  Object {
                    "sentPageTitle": "sentPageTitle",
                  }
                }
                hasAttachment={undefined}
                justBeenRead={false}
                location={
                  Object {
                    "messageDetail": Object {
                      "status": "sent",
                    },
                  }
                }
                messages={
                  Object {
                    "draftError": true,
                    "filter": [MockFunction],
                    "successModal": true,
                  }
                }
                messagesFetched={
                  Object {
                    "fetching": false,
                    "successModal": false,
                  }
                }
                newMessageStatus="sent"
                setMessageRead={[MockFunction]}
                setViewMessageDetail={
                  [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "status": "sent",
                        },
                      ],
                    ],
                  }
                }
                successModal={true}
              />
            </Card>
          </Row>
        </Container>,
        false,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <Row>
            <Card
              bordered={false}
            >
              <SectionHeading
                className="u-margin-bottom-2"
                heading1={undefined}
              />
              <Connect(withRouter(withMessaging))
                activeTab="SENT"
                basePath="http://localhost"
                content={
                  Object {
                    "sentPageTitle": "sentPageTitle",
                  }
                }
                hasAttachment={undefined}
                justBeenRead={false}
                location={
                  Object {
                    "messageDetail": Object {
                      "status": "sent",
                    },
                  }
                }
                messages={
                  Object {
                    "draftError": true,
                    "filter": [MockFunction],
                    "successModal": true,
                  }
                }
                messagesFetched={
                  Object {
                    "fetching": false,
                    "successModal": false,
                  }
                }
                newMessageStatus="sent"
                setMessageRead={[MockFunction]}
                setViewMessageDetail={
                  [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "status": "sent",
                        },
                      ],
                    ],
                  }
                }
                successModal={true}
              />
            </Card>
          </Row>,
          "size": undefined,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Card
              bordered={false}
            >
              <SectionHeading
                className="u-margin-bottom-2"
                heading1={undefined}
              />
              <Connect(withRouter(withMessaging))
                activeTab="SENT"
                basePath="http://localhost"
                content={
                  Object {
                    "sentPageTitle": "sentPageTitle",
                  }
                }
                hasAttachment={undefined}
                justBeenRead={false}
                location={
                  Object {
                    "messageDetail": Object {
                      "status": "sent",
                    },
                  }
                }
                messages={
                  Object {
                    "draftError": true,
                    "filter": [MockFunction],
                    "successModal": true,
                  }
                }
                messagesFetched={
                  Object {
                    "fetching": false,
                    "successModal": false,
                  }
                }
                newMessageStatus="sent"
                setMessageRead={[MockFunction]}
                setViewMessageDetail={
                  [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "status": "sent",
                        },
                      ],
                    ],
                  }
                }
                successModal={true}
              />
            </Card>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "bordered": false,
              "children": Array [
                <SectionHeading
                  className="u-margin-bottom-2"
                  heading1={undefined}
                />,
                <Connect(withRouter(withMessaging))
                  activeTab="SENT"
                  basePath="http://localhost"
                  content={
                    Object {
                      "sentPageTitle": "sentPageTitle",
                    }
                  }
                  hasAttachment={undefined}
                  justBeenRead={false}
                  location={
                    Object {
                      "messageDetail": Object {
                        "status": "sent",
                      },
                    }
                  }
                  messages={
                    Object {
                      "draftError": true,
                      "filter": [MockFunction],
                      "successModal": true,
                    }
                  }
                  messagesFetched={
                    Object {
                      "fetching": false,
                      "successModal": false,
                    }
                  }
                  newMessageStatus="sent"
                  setMessageRead={[MockFunction]}
                  setViewMessageDetail={
                    [MockFunction] {
                      "calls": Array [
                        Array [
                          Object {
                            "status": "sent",
                          },
                        ],
                      ],
                    }
                  }
                  successModal={true}
                />,
                Array [],
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "className": "u-margin-bottom-2",
                  "heading1": undefined,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "activeTab": "SENT",
                  "basePath": "http://localhost",
                  "content": Object {
                    "sentPageTitle": "sentPageTitle",
                  },
                  "hasAttachment": undefined,
                  "justBeenRead": false,
                  "location": Object {
                    "messageDetail": Object {
                      "status": "sent",
                    },
                  },
                  "messages": Object {
                    "draftError": true,
                    "filter": [MockFunction],
                    "successModal": true,
                  },
                  "messagesFetched": Object {
                    "fetching": false,
                    "successModal": false,
                  },
                  "newMessageStatus": "sent",
                  "setMessageRead": [MockFunction],
                  "setViewMessageDetail": [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "status": "sent",
                        },
                      ],
                    ],
                  },
                  "successModal": true,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
      false,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Container
            size={undefined}
          >
            <Row>
              <Card
                bordered={false}
              >
                <SectionHeading
                  className="u-margin-bottom-2"
                  heading1={undefined}
                />
                <Connect(withRouter(withMessaging))
                  activeTab="SENT"
                  basePath="http://localhost"
                  content={
                    Object {
                      "sentPageTitle": "sentPageTitle",
                    }
                  }
                  hasAttachment={undefined}
                  justBeenRead={false}
                  location={
                    Object {
                      "messageDetail": Object {
                        "status": "sent",
                      },
                    }
                  }
                  messages={
                    Object {
                      "draftError": true,
                      "filter": [MockFunction],
                      "successModal": true,
                    }
                  }
                  messagesFetched={
                    Object {
                      "fetching": false,
                      "successModal": false,
                    }
                  }
                  newMessageStatus="sent"
                  setMessageRead={[MockFunction]}
                  setViewMessageDetail={
                    [MockFunction] {
                      "calls": Array [
                        Array [
                          Object {
                            "status": "sent",
                          },
                        ],
                      ],
                    }
                  }
                  successModal={true}
                />
              </Card>
            </Row>
          </Container>,
          false,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Row>
              <Card
                bordered={false}
              >
                <SectionHeading
                  className="u-margin-bottom-2"
                  heading1={undefined}
                />
                <Connect(withRouter(withMessaging))
                  activeTab="SENT"
                  basePath="http://localhost"
                  content={
                    Object {
                      "sentPageTitle": "sentPageTitle",
                    }
                  }
                  hasAttachment={undefined}
                  justBeenRead={false}
                  location={
                    Object {
                      "messageDetail": Object {
                        "status": "sent",
                      },
                    }
                  }
                  messages={
                    Object {
                      "draftError": true,
                      "filter": [MockFunction],
                      "successModal": true,
                    }
                  }
                  messagesFetched={
                    Object {
                      "fetching": false,
                      "successModal": false,
                    }
                  }
                  newMessageStatus="sent"
                  setMessageRead={[MockFunction]}
                  setViewMessageDetail={
                    [MockFunction] {
                      "calls": Array [
                        Array [
                          Object {
                            "status": "sent",
                          },
                        ],
                      ],
                    }
                  }
                  successModal={true}
                />
              </Card>
            </Row>,
            "size": undefined,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <Card
                bordered={false}
              >
                <SectionHeading
                  className="u-margin-bottom-2"
                  heading1={undefined}
                />
                <Connect(withRouter(withMessaging))
                  activeTab="SENT"
                  basePath="http://localhost"
                  content={
                    Object {
                      "sentPageTitle": "sentPageTitle",
                    }
                  }
                  hasAttachment={undefined}
                  justBeenRead={false}
                  location={
                    Object {
                      "messageDetail": Object {
                        "status": "sent",
                      },
                    }
                  }
                  messages={
                    Object {
                      "draftError": true,
                      "filter": [MockFunction],
                      "successModal": true,
                    }
                  }
                  messagesFetched={
                    Object {
                      "fetching": false,
                      "successModal": false,
                    }
                  }
                  newMessageStatus="sent"
                  setMessageRead={[MockFunction]}
                  setViewMessageDetail={
                    [MockFunction] {
                      "calls": Array [
                        Array [
                          Object {
                            "status": "sent",
                          },
                        ],
                      ],
                    }
                  }
                  successModal={true}
                />
              </Card>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "bordered": false,
                "children": Array [
                  <SectionHeading
                    className="u-margin-bottom-2"
                    heading1={undefined}
                  />,
                  <Connect(withRouter(withMessaging))
                    activeTab="SENT"
                    basePath="http://localhost"
                    content={
                      Object {
                        "sentPageTitle": "sentPageTitle",
                      }
                    }
                    hasAttachment={undefined}
                    justBeenRead={false}
                    location={
                      Object {
                        "messageDetail": Object {
                          "status": "sent",
                        },
                      }
                    }
                    messages={
                      Object {
                        "draftError": true,
                        "filter": [MockFunction],
                        "successModal": true,
                      }
                    }
                    messagesFetched={
                      Object {
                        "fetching": false,
                        "successModal": false,
                      }
                    }
                    newMessageStatus="sent"
                    setMessageRead={[MockFunction]}
                    setViewMessageDetail={
                      [MockFunction] {
                        "calls": Array [
                          Array [
                            Object {
                              "status": "sent",
                            },
                          ],
                        ],
                      }
                    }
                    successModal={true}
                  />,
                  Array [],
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "className": "u-margin-bottom-2",
                    "heading1": undefined,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "activeTab": "SENT",
                    "basePath": "http://localhost",
                    "content": Object {
                      "sentPageTitle": "sentPageTitle",
                    },
                    "hasAttachment": undefined,
                    "justBeenRead": false,
                    "location": Object {
                      "messageDetail": Object {
                        "status": "sent",
                      },
                    },
                    "messages": Object {
                      "draftError": true,
                      "filter": [MockFunction],
                      "successModal": true,
                    },
                    "messagesFetched": Object {
                      "fetching": false,
                      "successModal": false,
                    },
                    "newMessageStatus": "sent",
                    "setMessageRead": [MockFunction],
                    "setViewMessageDetail": [MockFunction] {
                      "calls": Array [
                        Array [
                          Object {
                            "status": "sent",
                          },
                        ],
                      ],
                    },
                    "successModal": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        false,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenFourAdapter {
      "options": Object {
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "prevContext": true,
          },
          "getChildContext": Object {
            "calledByRenderer": true,
          },
        },
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`View Message snapshot should match to snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ViewMessage
    activeTab="SENT"
    content={
      Object {
        "back": "Back",
      }
    }
    dispatch={[MockFunction]}
    location={
      Object {
        "messageDetail": Object {
          "status": "NEW",
        },
      }
    }
    messages={
      Object {
        "draftError": true,
        "filter": [MockFunction],
        "successModal": true,
      }
    }
    messagesFetched={
      Object {
        "fetching": false,
        "successModal": false,
      }
    }
    setMessageRead={
      [MockFunction] {
        "calls": Array [
          Array [
            Object {
              "status": "NEW",
            },
          ],
        ],
      }
    }
    setViewMessageDetail={
      [MockFunction] {
        "calls": Array [
          Array [
            Object {
              "status": "NEW",
            },
          ],
        ],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Container
          size={undefined}
        >
          <Row>
            <Card
              bordered={false}
            >
              <SectionHeading
                className="u-margin-bottom-2"
                heading1={undefined}
              />
              <Connect(withRouter(withMessaging))
                activeTab="SENT"
                basePath="http://localhost"
                content={
                  Object {
                    "back": "Back",
                  }
                }
                dispatch={[MockFunction]}
                hasAttachment={undefined}
                justBeenRead={true}
                location={
                  Object {
                    "messageDetail": Object {
                      "status": "NEW",
                    },
                  }
                }
                messages={
                  Object {
                    "draftError": true,
                    "filter": [MockFunction],
                    "successModal": true,
                  }
                }
                messagesFetched={
                  Object {
                    "fetching": false,
                    "successModal": false,
                  }
                }
                newMessageStatus="READ"
                setMessageRead={
                  [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "status": "NEW",
                        },
                      ],
                    ],
                  }
                }
                setViewMessageDetail={
                  [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "status": "NEW",
                        },
                      ],
                    ],
                  }
                }
              />
            </Card>
          </Row>
        </Container>,
        false,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <Row>
            <Card
              bordered={false}
            >
              <SectionHeading
                className="u-margin-bottom-2"
                heading1={undefined}
              />
              <Connect(withRouter(withMessaging))
                activeTab="SENT"
                basePath="http://localhost"
                content={
                  Object {
                    "back": "Back",
                  }
                }
                dispatch={[MockFunction]}
                hasAttachment={undefined}
                justBeenRead={true}
                location={
                  Object {
                    "messageDetail": Object {
                      "status": "NEW",
                    },
                  }
                }
                messages={
                  Object {
                    "draftError": true,
                    "filter": [MockFunction],
                    "successModal": true,
                  }
                }
                messagesFetched={
                  Object {
                    "fetching": false,
                    "successModal": false,
                  }
                }
                newMessageStatus="READ"
                setMessageRead={
                  [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "status": "NEW",
                        },
                      ],
                    ],
                  }
                }
                setViewMessageDetail={
                  [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "status": "NEW",
                        },
                      ],
                    ],
                  }
                }
              />
            </Card>
          </Row>,
          "size": undefined,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Card
              bordered={false}
            >
              <SectionHeading
                className="u-margin-bottom-2"
                heading1={undefined}
              />
              <Connect(withRouter(withMessaging))
                activeTab="SENT"
                basePath="http://localhost"
                content={
                  Object {
                    "back": "Back",
                  }
                }
                dispatch={[MockFunction]}
                hasAttachment={undefined}
                justBeenRead={true}
                location={
                  Object {
                    "messageDetail": Object {
                      "status": "NEW",
                    },
                  }
                }
                messages={
                  Object {
                    "draftError": true,
                    "filter": [MockFunction],
                    "successModal": true,
                  }
                }
                messagesFetched={
                  Object {
                    "fetching": false,
                    "successModal": false,
                  }
                }
                newMessageStatus="READ"
                setMessageRead={
                  [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "status": "NEW",
                        },
                      ],
                    ],
                  }
                }
                setViewMessageDetail={
                  [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "status": "NEW",
                        },
                      ],
                    ],
                  }
                }
              />
            </Card>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "bordered": false,
              "children": Array [
                <SectionHeading
                  className="u-margin-bottom-2"
                  heading1={undefined}
                />,
                <Connect(withRouter(withMessaging))
                  activeTab="SENT"
                  basePath="http://localhost"
                  content={
                    Object {
                      "back": "Back",
                    }
                  }
                  dispatch={[MockFunction]}
                  hasAttachment={undefined}
                  justBeenRead={true}
                  location={
                    Object {
                      "messageDetail": Object {
                        "status": "NEW",
                      },
                    }
                  }
                  messages={
                    Object {
                      "draftError": true,
                      "filter": [MockFunction],
                      "successModal": true,
                    }
                  }
                  messagesFetched={
                    Object {
                      "fetching": false,
                      "successModal": false,
                    }
                  }
                  newMessageStatus="READ"
                  setMessageRead={
                    [MockFunction] {
                      "calls": Array [
                        Array [
                          Object {
                            "status": "NEW",
                          },
                        ],
                      ],
                    }
                  }
                  setViewMessageDetail={
                    [MockFunction] {
                      "calls": Array [
                        Array [
                          Object {
                            "status": "NEW",
                          },
                        ],
                      ],
                    }
                  }
                />,
                Array [],
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "className": "u-margin-bottom-2",
                  "heading1": undefined,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "activeTab": "SENT",
                  "basePath": "http://localhost",
                  "content": Object {
                    "back": "Back",
                  },
                  "dispatch": [MockFunction],
                  "hasAttachment": undefined,
                  "justBeenRead": true,
                  "location": Object {
                    "messageDetail": Object {
                      "status": "NEW",
                    },
                  },
                  "messages": Object {
                    "draftError": true,
                    "filter": [MockFunction],
                    "successModal": true,
                  },
                  "messagesFetched": Object {
                    "fetching": false,
                    "successModal": false,
                  },
                  "newMessageStatus": "READ",
                  "setMessageRead": [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "status": "NEW",
                        },
                      ],
                    ],
                  },
                  "setViewMessageDetail": [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "status": "NEW",
                        },
                      ],
                    ],
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
      false,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Container
            size={undefined}
          >
            <Row>
              <Card
                bordered={false}
              >
                <SectionHeading
                  className="u-margin-bottom-2"
                  heading1={undefined}
                />
                <Connect(withRouter(withMessaging))
                  activeTab="SENT"
                  basePath="http://localhost"
                  content={
                    Object {
                      "back": "Back",
                    }
                  }
                  dispatch={[MockFunction]}
                  hasAttachment={undefined}
                  justBeenRead={true}
                  location={
                    Object {
                      "messageDetail": Object {
                        "status": "NEW",
                      },
                    }
                  }
                  messages={
                    Object {
                      "draftError": true,
                      "filter": [MockFunction],
                      "successModal": true,
                    }
                  }
                  messagesFetched={
                    Object {
                      "fetching": false,
                      "successModal": false,
                    }
                  }
                  newMessageStatus="READ"
                  setMessageRead={
                    [MockFunction] {
                      "calls": Array [
                        Array [
                          Object {
                            "status": "NEW",
                          },
                        ],
                      ],
                    }
                  }
                  setViewMessageDetail={
                    [MockFunction] {
                      "calls": Array [
                        Array [
                          Object {
                            "status": "NEW",
                          },
                        ],
                      ],
                    }
                  }
                />
              </Card>
            </Row>
          </Container>,
          false,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Row>
              <Card
                bordered={false}
              >
                <SectionHeading
                  className="u-margin-bottom-2"
                  heading1={undefined}
                />
                <Connect(withRouter(withMessaging))
                  activeTab="SENT"
                  basePath="http://localhost"
                  content={
                    Object {
                      "back": "Back",
                    }
                  }
                  dispatch={[MockFunction]}
                  hasAttachment={undefined}
                  justBeenRead={true}
                  location={
                    Object {
                      "messageDetail": Object {
                        "status": "NEW",
                      },
                    }
                  }
                  messages={
                    Object {
                      "draftError": true,
                      "filter": [MockFunction],
                      "successModal": true,
                    }
                  }
                  messagesFetched={
                    Object {
                      "fetching": false,
                      "successModal": false,
                    }
                  }
                  newMessageStatus="READ"
                  setMessageRead={
                    [MockFunction] {
                      "calls": Array [
                        Array [
                          Object {
                            "status": "NEW",
                          },
                        ],
                      ],
                    }
                  }
                  setViewMessageDetail={
                    [MockFunction] {
                      "calls": Array [
                        Array [
                          Object {
                            "status": "NEW",
                          },
                        ],
                      ],
                    }
                  }
                />
              </Card>
            </Row>,
            "size": undefined,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <Card
                bordered={false}
              >
                <SectionHeading
                  className="u-margin-bottom-2"
                  heading1={undefined}
                />
                <Connect(withRouter(withMessaging))
                  activeTab="SENT"
                  basePath="http://localhost"
                  content={
                    Object {
                      "back": "Back",
                    }
                  }
                  dispatch={[MockFunction]}
                  hasAttachment={undefined}
                  justBeenRead={true}
                  location={
                    Object {
                      "messageDetail": Object {
                        "status": "NEW",
                      },
                    }
                  }
                  messages={
                    Object {
                      "draftError": true,
                      "filter": [MockFunction],
                      "successModal": true,
                    }
                  }
                  messagesFetched={
                    Object {
                      "fetching": false,
                      "successModal": false,
                    }
                  }
                  newMessageStatus="READ"
                  setMessageRead={
                    [MockFunction] {
                      "calls": Array [
                        Array [
                          Object {
                            "status": "NEW",
                          },
                        ],
                      ],
                    }
                  }
                  setViewMessageDetail={
                    [MockFunction] {
                      "calls": Array [
                        Array [
                          Object {
                            "status": "NEW",
                          },
                        ],
                      ],
                    }
                  }
                />
              </Card>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "bordered": false,
                "children": Array [
                  <SectionHeading
                    className="u-margin-bottom-2"
                    heading1={undefined}
                  />,
                  <Connect(withRouter(withMessaging))
                    activeTab="SENT"
                    basePath="http://localhost"
                    content={
                      Object {
                        "back": "Back",
                      }
                    }
                    dispatch={[MockFunction]}
                    hasAttachment={undefined}
                    justBeenRead={true}
                    location={
                      Object {
                        "messageDetail": Object {
                          "status": "NEW",
                        },
                      }
                    }
                    messages={
                      Object {
                        "draftError": true,
                        "filter": [MockFunction],
                        "successModal": true,
                      }
                    }
                    messagesFetched={
                      Object {
                        "fetching": false,
                        "successModal": false,
                      }
                    }
                    newMessageStatus="READ"
                    setMessageRead={
                      [MockFunction] {
                        "calls": Array [
                          Array [
                            Object {
                              "status": "NEW",
                            },
                          ],
                        ],
                      }
                    }
                    setViewMessageDetail={
                      [MockFunction] {
                        "calls": Array [
                          Array [
                            Object {
                              "status": "NEW",
                            },
                          ],
                        ],
                      }
                    }
                  />,
                  Array [],
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "className": "u-margin-bottom-2",
                    "heading1": undefined,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "activeTab": "SENT",
                    "basePath": "http://localhost",
                    "content": Object {
                      "back": "Back",
                    },
                    "dispatch": [MockFunction],
                    "hasAttachment": undefined,
                    "justBeenRead": true,
                    "location": Object {
                      "messageDetail": Object {
                        "status": "NEW",
                      },
                    },
                    "messages": Object {
                      "draftError": true,
                      "filter": [MockFunction],
                      "successModal": true,
                    },
                    "messagesFetched": Object {
                      "fetching": false,
                      "successModal": false,
                    },
                    "newMessageStatus": "READ",
                    "setMessageRead": [MockFunction] {
                      "calls": Array [
                        Array [
                          Object {
                            "status": "NEW",
                          },
                        ],
                      ],
                    },
                    "setViewMessageDetail": [MockFunction] {
                      "calls": Array [
                        Array [
                          Object {
                            "status": "NEW",
                          },
                        ],
                      ],
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        false,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenFourAdapter {
      "options": Object {
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "prevContext": true,
          },
          "getChildContext": Object {
            "calledByRenderer": true,
          },
        },
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;
