// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`New Secure message snapshot should match to snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SecureMessageTabs
    content={
      Object {
        "back": "Back",
      }
    }
    dispatch={[MockFunction]}
    messages={
      Object {
        "inboxMessages": Array [
          Object {
            "status": "NEW",
          },
        ],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <Row>
          <TabGroup
            activeTab="INBOX"
            onChange={[Function]}
            tabButtons={
              Array [
                Object {
                  "id": "INBOX",
                  "title": "Inbox (true)",
                },
                Object {
                  "id": "DRAFT",
                  "title": "Drafts",
                },
                Object {
                  "id": "SENT",
                  "title": "Sent",
                },
                Object {
                  "id": "ARCHIVED",
                  "title": "Archive",
                },
              ]
            }
          />
        </Row>,
        <Row>
          <Connect(SecureMessageList)
            activeTab="INBOX"
            content={
              Object {
                "back": "Back",
              }
            }
            messages={
              Array [
                Object {
                  "status": "NEW",
                },
              ]
            }
          />
        </Row>,
      ],
      "className": "u-margin-top-2",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <TabGroup
            activeTab="INBOX"
            onChange={[Function]}
            tabButtons={
              Array [
                Object {
                  "id": "INBOX",
                  "title": "Inbox (true)",
                },
                Object {
                  "id": "DRAFT",
                  "title": "Drafts",
                },
                Object {
                  "id": "SENT",
                  "title": "Sent",
                },
                Object {
                  "id": "ARCHIVED",
                  "title": "Archive",
                },
              ]
            }
          />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "activeTab": "INBOX",
            "onChange": [Function],
            "tabButtons": Array [
              Object {
                "id": "INBOX",
                "title": "Inbox (true)",
              },
              Object {
                "id": "DRAFT",
                "title": "Drafts",
              },
              Object {
                "id": "SENT",
                "title": "Sent",
              },
              Object {
                "id": "ARCHIVED",
                "title": "Archive",
              },
            ],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <Connect(SecureMessageList)
            activeTab="INBOX"
            content={
              Object {
                "back": "Back",
              }
            }
            messages={
              Array [
                Object {
                  "status": "NEW",
                },
              ]
            }
          />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "activeTab": "INBOX",
            "content": Object {
              "back": "Back",
            },
            "messages": Array [
              Object {
                "status": "NEW",
              },
            ],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Row>
            <TabGroup
              activeTab="INBOX"
              onChange={[Function]}
              tabButtons={
                Array [
                  Object {
                    "id": "INBOX",
                    "title": "Inbox (true)",
                  },
                  Object {
                    "id": "DRAFT",
                    "title": "Drafts",
                  },
                  Object {
                    "id": "SENT",
                    "title": "Sent",
                  },
                  Object {
                    "id": "ARCHIVED",
                    "title": "Archive",
                  },
                ]
              }
            />
          </Row>,
          <Row>
            <Connect(SecureMessageList)
              activeTab="INBOX"
              content={
                Object {
                  "back": "Back",
                }
              }
              messages={
                Array [
                  Object {
                    "status": "NEW",
                  },
                ]
              }
            />
          </Row>,
        ],
        "className": "u-margin-top-2",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <TabGroup
              activeTab="INBOX"
              onChange={[Function]}
              tabButtons={
                Array [
                  Object {
                    "id": "INBOX",
                    "title": "Inbox (true)",
                  },
                  Object {
                    "id": "DRAFT",
                    "title": "Drafts",
                  },
                  Object {
                    "id": "SENT",
                    "title": "Sent",
                  },
                  Object {
                    "id": "ARCHIVED",
                    "title": "Archive",
                  },
                ]
              }
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "activeTab": "INBOX",
              "onChange": [Function],
              "tabButtons": Array [
                Object {
                  "id": "INBOX",
                  "title": "Inbox (true)",
                },
                Object {
                  "id": "DRAFT",
                  "title": "Drafts",
                },
                Object {
                  "id": "SENT",
                  "title": "Sent",
                },
                Object {
                  "id": "ARCHIVED",
                  "title": "Archive",
                },
              ],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Connect(SecureMessageList)
              activeTab="INBOX"
              content={
                Object {
                  "back": "Back",
                }
              }
              messages={
                Array [
                  Object {
                    "status": "NEW",
                  },
                ]
              }
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "activeTab": "INBOX",
              "content": Object {
                "back": "Back",
              },
              "messages": Array [
                Object {
                  "status": "NEW",
                },
              ],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenFourAdapter {
      "options": Object {
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "prevContext": true,
          },
          "getChildContext": Object {
            "calledByRenderer": true,
          },
        },
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
