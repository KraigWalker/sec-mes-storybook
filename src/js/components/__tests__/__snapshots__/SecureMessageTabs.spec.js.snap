// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`New Secure message snapshot should match to snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SecureMessageTabs
    content={
      Object {
        "back": "Back",
      }
    }
    dispatch={[MockFunction]}
    messages={
      Object {
        "inboxMessages": Array [
          Object {
            "status": "NEW",
          },
        ],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "activeKey": "inbox",
      "children": Array [
        <Tab
          aria-label="Inbox (1) unread messages"
          eventKey="inbox"
          title="Inbox (1)"
        >
          <Connect(SecureMessageList)
            activeTab="INBOX"
            content={
              Object {
                "back": "Back",
              }
            }
            messages={
              Array [
                Object {
                  "status": "NEW",
                },
              ]
            }
          />
        </Tab>,
        <Tab
          aria-label="Drafts"
          eventKey="drafts"
          title="Drafts"
        >
          <Connect(SecureMessageList)
            activeTab="DRAFT"
            content={
              Object {
                "back": "Back",
              }
            }
            messages={undefined}
          />
        </Tab>,
        <Tab
          aria-label="Sent"
          eventKey="sent"
          title="Sent"
        >
          <Connect(SecureMessageList)
            activeTab="SENT"
            content={
              Object {
                "back": "Back",
              }
            }
            messages={undefined}
          />
        </Tab>,
      ],
      "className": "c-scroll-tabs",
      "id": "secure_tabs",
      "onSelect": [Function],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "aria-label": "Inbox (1) unread messages",
          "children": <Connect(SecureMessageList)
            activeTab="INBOX"
            content={
              Object {
                "back": "Back",
              }
            }
            messages={
              Array [
                Object {
                  "status": "NEW",
                },
              ]
            }
          />,
          "eventKey": "inbox",
          "title": "Inbox (1)",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "activeTab": "INBOX",
            "content": Object {
              "back": "Back",
            },
            "messages": Array [
              Object {
                "status": "NEW",
              },
            ],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "aria-label": "Drafts",
          "children": <Connect(SecureMessageList)
            activeTab="DRAFT"
            content={
              Object {
                "back": "Back",
              }
            }
            messages={undefined}
          />,
          "eventKey": "drafts",
          "title": "Drafts",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "activeTab": "DRAFT",
            "content": Object {
              "back": "Back",
            },
            "messages": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "aria-label": "Sent",
          "children": <Connect(SecureMessageList)
            activeTab="SENT"
            content={
              Object {
                "back": "Back",
              }
            }
            messages={undefined}
          />,
          "eventKey": "sent",
          "title": "Sent",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "activeTab": "SENT",
            "content": Object {
              "back": "Back",
            },
            "messages": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "activeKey": "inbox",
        "children": Array [
          <Tab
            aria-label="Inbox (1) unread messages"
            eventKey="inbox"
            title="Inbox (1)"
          >
            <Connect(SecureMessageList)
              activeTab="INBOX"
              content={
                Object {
                  "back": "Back",
                }
              }
              messages={
                Array [
                  Object {
                    "status": "NEW",
                  },
                ]
              }
            />
          </Tab>,
          <Tab
            aria-label="Drafts"
            eventKey="drafts"
            title="Drafts"
          >
            <Connect(SecureMessageList)
              activeTab="DRAFT"
              content={
                Object {
                  "back": "Back",
                }
              }
              messages={undefined}
            />
          </Tab>,
          <Tab
            aria-label="Sent"
            eventKey="sent"
            title="Sent"
          >
            <Connect(SecureMessageList)
              activeTab="SENT"
              content={
                Object {
                  "back": "Back",
                }
              }
              messages={undefined}
            />
          </Tab>,
        ],
        "className": "c-scroll-tabs",
        "id": "secure_tabs",
        "onSelect": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "aria-label": "Inbox (1) unread messages",
            "children": <Connect(SecureMessageList)
              activeTab="INBOX"
              content={
                Object {
                  "back": "Back",
                }
              }
              messages={
                Array [
                  Object {
                    "status": "NEW",
                  },
                ]
              }
            />,
            "eventKey": "inbox",
            "title": "Inbox (1)",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "activeTab": "INBOX",
              "content": Object {
                "back": "Back",
              },
              "messages": Array [
                Object {
                  "status": "NEW",
                },
              ],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "aria-label": "Drafts",
            "children": <Connect(SecureMessageList)
              activeTab="DRAFT"
              content={
                Object {
                  "back": "Back",
                }
              }
              messages={undefined}
            />,
            "eventKey": "drafts",
            "title": "Drafts",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "activeTab": "DRAFT",
              "content": Object {
                "back": "Back",
              },
              "messages": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "aria-label": "Sent",
            "children": <Connect(SecureMessageList)
              activeTab="SENT"
              content={
                Object {
                  "back": "Back",
                }
              }
              messages={undefined}
            />,
            "eventKey": "sent",
            "title": "Sent",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "activeTab": "SENT",
              "content": Object {
                "back": "Back",
              },
              "messages": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenFourAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;
