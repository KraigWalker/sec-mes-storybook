// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`New Secure message snapshot should match to snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DraftSecureMessage
    content={
      Object {
        "back": "Back",
      }
    }
    dispatch={
      [MockFunction] {
        "calls": Array [
          Array [
            [Function],
          ],
        ],
      }
    }
    location={
      Object {
        "messageDetail": Object {
          "account": Object {
            "accountId": "343434222",
            "number": "5666666",
          },
        },
      }
    }
    messages={
      Object {
        "messages": Array [],
        "newMessageError": false,
        "successModal": false,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="row centralised-container"
      >
        <div
          className="col-md1-24 col-sm1-24 col-lg1-24"
        >
          <StepHeader
            headerCrumbsMessage="Back"
            headerCrumbsPath={
              Object {
                "pathname": "undefined/securemessages",
              }
            }
            headerTitle={undefined}
            onClick={[Function]}
            showControl={false}
            showheaderCrumbs={true}
          />
          <div
            className="c-field"
          >
            <label
              className="c-field__label c-field__label--block"
              htmlFor="subjects"
            />
            <div
              className="c-field__controls u-position-relative"
            >
              <Connect(DropDownComponent)
                content={
                  Object {
                    "back": "Back",
                  }
                }
                id="subjects"
                isFromDraftOrReply={true}
                selectSubject={[Function]}
                selectedValue={undefined}
                showSubjectError={undefined}
                subjects={undefined}
              />
            </div>
          </div>
          <div
            className="c-field"
          >
            <label
              className="c-field__label c-field__label--block"
              htmlFor="subjects"
            />
            <div
              className="c-field__controls u-position-relative"
            >
              <Connect(DropDownComponent)
                accounts={
                  Object {
                    "accountId": "343434222",
                    "number": "5666666",
                  }
                }
                content={
                  Object {
                    "back": "Back",
                  }
                }
                id="accounts"
                isFromDraftOrReply={true}
                selectSubject={[Function]}
                selectedValue={undefined}
                showAccountError={undefined}
              />
            </div>
          </div>
          <div
            className="c-field"
          >
            <label
              className="c-field__label c-field__label--block"
              htmlFor="subjects"
            />
            <div
              className="c-field__controls"
            >
              <TextAreaComponent
                ariaId=""
                draftData={undefined}
                isFromDraftOrReply={true}
                textData={[Function]}
              />
            </div>
          </div>
          
          <div
            className="c-btn--group"
          >
            <Link
              className="c-btn c-btn--secondary"
              replace={false}
              to="undefined/securemessages"
            >
              Back
               
            </Link>
            <button
              className="c-btn c-btn--secondary"
              disabled={true}
              name="Save Draft"
              onClick={[Function]}
            />
            <button
              className="c-btn c-btn--default"
              disabled={true}
              name="Send"
              onClick={[Function]}
            />
          </div>
        </div>
      </div>,
      "className": "container",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="col-md1-24 col-sm1-24 col-lg1-24"
        >
          <StepHeader
            headerCrumbsMessage="Back"
            headerCrumbsPath={
              Object {
                "pathname": "undefined/securemessages",
              }
            }
            headerTitle={undefined}
            onClick={[Function]}
            showControl={false}
            showheaderCrumbs={true}
          />
          <div
            className="c-field"
          >
            <label
              className="c-field__label c-field__label--block"
              htmlFor="subjects"
            />
            <div
              className="c-field__controls u-position-relative"
            >
              <Connect(DropDownComponent)
                content={
                  Object {
                    "back": "Back",
                  }
                }
                id="subjects"
                isFromDraftOrReply={true}
                selectSubject={[Function]}
                selectedValue={undefined}
                showSubjectError={undefined}
                subjects={undefined}
              />
            </div>
          </div>
          <div
            className="c-field"
          >
            <label
              className="c-field__label c-field__label--block"
              htmlFor="subjects"
            />
            <div
              className="c-field__controls u-position-relative"
            >
              <Connect(DropDownComponent)
                accounts={
                  Object {
                    "accountId": "343434222",
                    "number": "5666666",
                  }
                }
                content={
                  Object {
                    "back": "Back",
                  }
                }
                id="accounts"
                isFromDraftOrReply={true}
                selectSubject={[Function]}
                selectedValue={undefined}
                showAccountError={undefined}
              />
            </div>
          </div>
          <div
            className="c-field"
          >
            <label
              className="c-field__label c-field__label--block"
              htmlFor="subjects"
            />
            <div
              className="c-field__controls"
            >
              <TextAreaComponent
                ariaId=""
                draftData={undefined}
                isFromDraftOrReply={true}
                textData={[Function]}
              />
            </div>
          </div>
          
          <div
            className="c-btn--group"
          >
            <Link
              className="c-btn c-btn--secondary"
              replace={false}
              to="undefined/securemessages"
            >
              Back
               
            </Link>
            <button
              className="c-btn c-btn--secondary"
              disabled={true}
              name="Save Draft"
              onClick={[Function]}
            />
            <button
              className="c-btn c-btn--default"
              disabled={true}
              name="Send"
              onClick={[Function]}
            />
          </div>
        </div>,
        "className": "row centralised-container",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <StepHeader
              headerCrumbsMessage="Back"
              headerCrumbsPath={
                Object {
                  "pathname": "undefined/securemessages",
                }
              }
              headerTitle={undefined}
              onClick={[Function]}
              showControl={false}
              showheaderCrumbs={true}
            />,
            <div
              className="c-field"
            >
              <label
                className="c-field__label c-field__label--block"
                htmlFor="subjects"
              />
              <div
                className="c-field__controls u-position-relative"
              >
                <Connect(DropDownComponent)
                  content={
                    Object {
                      "back": "Back",
                    }
                  }
                  id="subjects"
                  isFromDraftOrReply={true}
                  selectSubject={[Function]}
                  selectedValue={undefined}
                  showSubjectError={undefined}
                  subjects={undefined}
                />
              </div>
            </div>,
            <div
              className="c-field"
            >
              <label
                className="c-field__label c-field__label--block"
                htmlFor="subjects"
              />
              <div
                className="c-field__controls u-position-relative"
              >
                <Connect(DropDownComponent)
                  accounts={
                    Object {
                      "accountId": "343434222",
                      "number": "5666666",
                    }
                  }
                  content={
                    Object {
                      "back": "Back",
                    }
                  }
                  id="accounts"
                  isFromDraftOrReply={true}
                  selectSubject={[Function]}
                  selectedValue={undefined}
                  showAccountError={undefined}
                />
              </div>
            </div>,
            <div
              className="c-field"
            >
              <label
                className="c-field__label c-field__label--block"
                htmlFor="subjects"
              />
              <div
                className="c-field__controls"
              >
                <TextAreaComponent
                  ariaId=""
                  draftData={undefined}
                  isFromDraftOrReply={true}
                  textData={[Function]}
                />
              </div>
            </div>,
            "",
            false,
            undefined,
            undefined,
            <div
              className="c-btn--group"
            >
              <Link
                className="c-btn c-btn--secondary"
                replace={false}
                to="undefined/securemessages"
              >
                Back
                 
              </Link>
              <button
                className="c-btn c-btn--secondary"
                disabled={true}
                name="Save Draft"
                onClick={[Function]}
              />
              <button
                className="c-btn c-btn--default"
                disabled={true}
                name="Send"
                onClick={[Function]}
              />
            </div>,
          ],
          "className": "col-md1-24 col-sm1-24 col-lg1-24",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "headerCrumbsMessage": "Back",
              "headerCrumbsPath": Object {
                "pathname": "undefined/securemessages",
              },
              "headerTitle": undefined,
              "onClick": [Function],
              "showControl": false,
              "showheaderCrumbs": true,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <label
                  className="c-field__label c-field__label--block"
                  htmlFor="subjects"
                />,
                <div
                  className="c-field__controls u-position-relative"
                >
                  <Connect(DropDownComponent)
                    content={
                      Object {
                        "back": "Back",
                      }
                    }
                    id="subjects"
                    isFromDraftOrReply={true}
                    selectSubject={[Function]}
                    selectedValue={undefined}
                    showSubjectError={undefined}
                    subjects={undefined}
                  />
                </div>,
              ],
              "className": "c-field",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": undefined,
                  "className": "c-field__label c-field__label--block",
                  "htmlFor": "subjects",
                },
                "ref": null,
                "rendered": null,
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Connect(DropDownComponent)
                    content={
                      Object {
                        "back": "Back",
                      }
                    }
                    id="subjects"
                    isFromDraftOrReply={true}
                    selectSubject={[Function]}
                    selectedValue={undefined}
                    showSubjectError={undefined}
                    subjects={undefined}
                  />,
                  "className": "c-field__controls u-position-relative",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "content": Object {
                      "back": "Back",
                    },
                    "id": "subjects",
                    "isFromDraftOrReply": true,
                    "selectSubject": [Function],
                    "selectedValue": undefined,
                    "showSubjectError": undefined,
                    "subjects": undefined,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <label
                  className="c-field__label c-field__label--block"
                  htmlFor="subjects"
                />,
                <div
                  className="c-field__controls u-position-relative"
                >
                  <Connect(DropDownComponent)
                    accounts={
                      Object {
                        "accountId": "343434222",
                        "number": "5666666",
                      }
                    }
                    content={
                      Object {
                        "back": "Back",
                      }
                    }
                    id="accounts"
                    isFromDraftOrReply={true}
                    selectSubject={[Function]}
                    selectedValue={undefined}
                    showAccountError={undefined}
                  />
                </div>,
              ],
              "className": "c-field",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": undefined,
                  "className": "c-field__label c-field__label--block",
                  "htmlFor": "subjects",
                },
                "ref": null,
                "rendered": null,
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Connect(DropDownComponent)
                    accounts={
                      Object {
                        "accountId": "343434222",
                        "number": "5666666",
                      }
                    }
                    content={
                      Object {
                        "back": "Back",
                      }
                    }
                    id="accounts"
                    isFromDraftOrReply={true}
                    selectSubject={[Function]}
                    selectedValue={undefined}
                    showAccountError={undefined}
                  />,
                  "className": "c-field__controls u-position-relative",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "accounts": Object {
                      "accountId": "343434222",
                      "number": "5666666",
                    },
                    "content": Object {
                      "back": "Back",
                    },
                    "id": "accounts",
                    "isFromDraftOrReply": true,
                    "selectSubject": [Function],
                    "selectedValue": undefined,
                    "showAccountError": undefined,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <label
                  className="c-field__label c-field__label--block"
                  htmlFor="subjects"
                />,
                <div
                  className="c-field__controls"
                >
                  <TextAreaComponent
                    ariaId=""
                    draftData={undefined}
                    isFromDraftOrReply={true}
                    textData={[Function]}
                  />
                </div>,
                undefined,
              ],
              "className": "c-field",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": undefined,
                  "className": "c-field__label c-field__label--block",
                  "htmlFor": "subjects",
                },
                "ref": null,
                "rendered": null,
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <TextAreaComponent
                    ariaId=""
                    draftData={undefined}
                    isFromDraftOrReply={true}
                    textData={[Function]}
                  />,
                  "className": "c-field__controls",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "ariaId": "",
                    "draftData": undefined,
                    "isFromDraftOrReply": true,
                    "textData": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
              undefined,
            ],
            "type": "div",
          },
          "",
          false,
          undefined,
          undefined,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Link
                  className="c-btn c-btn--secondary"
                  replace={false}
                  to="undefined/securemessages"
                >
                  Back
                   
                </Link>,
                <button
                  className="c-btn c-btn--secondary"
                  disabled={true}
                  name="Save Draft"
                  onClick={[Function]}
                />,
                <button
                  className="c-btn c-btn--default"
                  disabled={true}
                  name="Send"
                  onClick={[Function]}
                />,
              ],
              "className": "c-btn--group",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    "Back",
                    " ",
                  ],
                  "className": "c-btn c-btn--secondary",
                  "replace": false,
                  "to": "undefined/securemessages",
                },
                "ref": null,
                "rendered": Array [
                  "Back",
                  " ",
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": undefined,
                  "className": "c-btn c-btn--secondary",
                  "disabled": true,
                  "name": "Save Draft",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": "button",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": undefined,
                  "className": "c-btn c-btn--default",
                  "disabled": true,
                  "name": "Send",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": "button",
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="row centralised-container"
        >
          <div
            className="col-md1-24 col-sm1-24 col-lg1-24"
          >
            <StepHeader
              headerCrumbsMessage="Back"
              headerCrumbsPath={
                Object {
                  "pathname": "undefined/securemessages",
                }
              }
              headerTitle={undefined}
              onClick={[Function]}
              showControl={false}
              showheaderCrumbs={true}
            />
            <div
              className="c-field"
            >
              <label
                className="c-field__label c-field__label--block"
                htmlFor="subjects"
              />
              <div
                className="c-field__controls u-position-relative"
              >
                <Connect(DropDownComponent)
                  content={
                    Object {
                      "back": "Back",
                    }
                  }
                  id="subjects"
                  isFromDraftOrReply={true}
                  selectSubject={[Function]}
                  selectedValue={undefined}
                  showSubjectError={undefined}
                  subjects={undefined}
                />
              </div>
            </div>
            <div
              className="c-field"
            >
              <label
                className="c-field__label c-field__label--block"
                htmlFor="subjects"
              />
              <div
                className="c-field__controls u-position-relative"
              >
                <Connect(DropDownComponent)
                  accounts={
                    Object {
                      "accountId": "343434222",
                      "number": "5666666",
                    }
                  }
                  content={
                    Object {
                      "back": "Back",
                    }
                  }
                  id="accounts"
                  isFromDraftOrReply={true}
                  selectSubject={[Function]}
                  selectedValue={undefined}
                  showAccountError={undefined}
                />
              </div>
            </div>
            <div
              className="c-field"
            >
              <label
                className="c-field__label c-field__label--block"
                htmlFor="subjects"
              />
              <div
                className="c-field__controls"
              >
                <TextAreaComponent
                  ariaId=""
                  draftData={undefined}
                  isFromDraftOrReply={true}
                  textData={[Function]}
                />
              </div>
            </div>
            
            <div
              className="c-btn--group"
            >
              <Link
                className="c-btn c-btn--secondary"
                replace={false}
                to="undefined/securemessages"
              >
                Back
                 
              </Link>
              <button
                className="c-btn c-btn--secondary"
                disabled={true}
                name="Save Draft"
                onClick={[Function]}
              />
              <button
                className="c-btn c-btn--default"
                disabled={true}
                name="Send"
                onClick={[Function]}
              />
            </div>
          </div>
        </div>,
        "className": "container",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="col-md1-24 col-sm1-24 col-lg1-24"
          >
            <StepHeader
              headerCrumbsMessage="Back"
              headerCrumbsPath={
                Object {
                  "pathname": "undefined/securemessages",
                }
              }
              headerTitle={undefined}
              onClick={[Function]}
              showControl={false}
              showheaderCrumbs={true}
            />
            <div
              className="c-field"
            >
              <label
                className="c-field__label c-field__label--block"
                htmlFor="subjects"
              />
              <div
                className="c-field__controls u-position-relative"
              >
                <Connect(DropDownComponent)
                  content={
                    Object {
                      "back": "Back",
                    }
                  }
                  id="subjects"
                  isFromDraftOrReply={true}
                  selectSubject={[Function]}
                  selectedValue={undefined}
                  showSubjectError={undefined}
                  subjects={undefined}
                />
              </div>
            </div>
            <div
              className="c-field"
            >
              <label
                className="c-field__label c-field__label--block"
                htmlFor="subjects"
              />
              <div
                className="c-field__controls u-position-relative"
              >
                <Connect(DropDownComponent)
                  accounts={
                    Object {
                      "accountId": "343434222",
                      "number": "5666666",
                    }
                  }
                  content={
                    Object {
                      "back": "Back",
                    }
                  }
                  id="accounts"
                  isFromDraftOrReply={true}
                  selectSubject={[Function]}
                  selectedValue={undefined}
                  showAccountError={undefined}
                />
              </div>
            </div>
            <div
              className="c-field"
            >
              <label
                className="c-field__label c-field__label--block"
                htmlFor="subjects"
              />
              <div
                className="c-field__controls"
              >
                <TextAreaComponent
                  ariaId=""
                  draftData={undefined}
                  isFromDraftOrReply={true}
                  textData={[Function]}
                />
              </div>
            </div>
            
            <div
              className="c-btn--group"
            >
              <Link
                className="c-btn c-btn--secondary"
                replace={false}
                to="undefined/securemessages"
              >
                Back
                 
              </Link>
              <button
                className="c-btn c-btn--secondary"
                disabled={true}
                name="Save Draft"
                onClick={[Function]}
              />
              <button
                className="c-btn c-btn--default"
                disabled={true}
                name="Send"
                onClick={[Function]}
              />
            </div>
          </div>,
          "className": "row centralised-container",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <StepHeader
                headerCrumbsMessage="Back"
                headerCrumbsPath={
                  Object {
                    "pathname": "undefined/securemessages",
                  }
                }
                headerTitle={undefined}
                onClick={[Function]}
                showControl={false}
                showheaderCrumbs={true}
              />,
              <div
                className="c-field"
              >
                <label
                  className="c-field__label c-field__label--block"
                  htmlFor="subjects"
                />
                <div
                  className="c-field__controls u-position-relative"
                >
                  <Connect(DropDownComponent)
                    content={
                      Object {
                        "back": "Back",
                      }
                    }
                    id="subjects"
                    isFromDraftOrReply={true}
                    selectSubject={[Function]}
                    selectedValue={undefined}
                    showSubjectError={undefined}
                    subjects={undefined}
                  />
                </div>
              </div>,
              <div
                className="c-field"
              >
                <label
                  className="c-field__label c-field__label--block"
                  htmlFor="subjects"
                />
                <div
                  className="c-field__controls u-position-relative"
                >
                  <Connect(DropDownComponent)
                    accounts={
                      Object {
                        "accountId": "343434222",
                        "number": "5666666",
                      }
                    }
                    content={
                      Object {
                        "back": "Back",
                      }
                    }
                    id="accounts"
                    isFromDraftOrReply={true}
                    selectSubject={[Function]}
                    selectedValue={undefined}
                    showAccountError={undefined}
                  />
                </div>
              </div>,
              <div
                className="c-field"
              >
                <label
                  className="c-field__label c-field__label--block"
                  htmlFor="subjects"
                />
                <div
                  className="c-field__controls"
                >
                  <TextAreaComponent
                    ariaId=""
                    draftData={undefined}
                    isFromDraftOrReply={true}
                    textData={[Function]}
                  />
                </div>
              </div>,
              "",
              false,
              undefined,
              undefined,
              <div
                className="c-btn--group"
              >
                <Link
                  className="c-btn c-btn--secondary"
                  replace={false}
                  to="undefined/securemessages"
                >
                  Back
                   
                </Link>
                <button
                  className="c-btn c-btn--secondary"
                  disabled={true}
                  name="Save Draft"
                  onClick={[Function]}
                />
                <button
                  className="c-btn c-btn--default"
                  disabled={true}
                  name="Send"
                  onClick={[Function]}
                />
              </div>,
            ],
            "className": "col-md1-24 col-sm1-24 col-lg1-24",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "headerCrumbsMessage": "Back",
                "headerCrumbsPath": Object {
                  "pathname": "undefined/securemessages",
                },
                "headerTitle": undefined,
                "onClick": [Function],
                "showControl": false,
                "showheaderCrumbs": true,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <label
                    className="c-field__label c-field__label--block"
                    htmlFor="subjects"
                  />,
                  <div
                    className="c-field__controls u-position-relative"
                  >
                    <Connect(DropDownComponent)
                      content={
                        Object {
                          "back": "Back",
                        }
                      }
                      id="subjects"
                      isFromDraftOrReply={true}
                      selectSubject={[Function]}
                      selectedValue={undefined}
                      showSubjectError={undefined}
                      subjects={undefined}
                    />
                  </div>,
                ],
                "className": "c-field",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": undefined,
                    "className": "c-field__label c-field__label--block",
                    "htmlFor": "subjects",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "label",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Connect(DropDownComponent)
                      content={
                        Object {
                          "back": "Back",
                        }
                      }
                      id="subjects"
                      isFromDraftOrReply={true}
                      selectSubject={[Function]}
                      selectedValue={undefined}
                      showSubjectError={undefined}
                      subjects={undefined}
                    />,
                    "className": "c-field__controls u-position-relative",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "content": Object {
                        "back": "Back",
                      },
                      "id": "subjects",
                      "isFromDraftOrReply": true,
                      "selectSubject": [Function],
                      "selectedValue": undefined,
                      "showSubjectError": undefined,
                      "subjects": undefined,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <label
                    className="c-field__label c-field__label--block"
                    htmlFor="subjects"
                  />,
                  <div
                    className="c-field__controls u-position-relative"
                  >
                    <Connect(DropDownComponent)
                      accounts={
                        Object {
                          "accountId": "343434222",
                          "number": "5666666",
                        }
                      }
                      content={
                        Object {
                          "back": "Back",
                        }
                      }
                      id="accounts"
                      isFromDraftOrReply={true}
                      selectSubject={[Function]}
                      selectedValue={undefined}
                      showAccountError={undefined}
                    />
                  </div>,
                ],
                "className": "c-field",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": undefined,
                    "className": "c-field__label c-field__label--block",
                    "htmlFor": "subjects",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "label",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Connect(DropDownComponent)
                      accounts={
                        Object {
                          "accountId": "343434222",
                          "number": "5666666",
                        }
                      }
                      content={
                        Object {
                          "back": "Back",
                        }
                      }
                      id="accounts"
                      isFromDraftOrReply={true}
                      selectSubject={[Function]}
                      selectedValue={undefined}
                      showAccountError={undefined}
                    />,
                    "className": "c-field__controls u-position-relative",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "accounts": Object {
                        "accountId": "343434222",
                        "number": "5666666",
                      },
                      "content": Object {
                        "back": "Back",
                      },
                      "id": "accounts",
                      "isFromDraftOrReply": true,
                      "selectSubject": [Function],
                      "selectedValue": undefined,
                      "showAccountError": undefined,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <label
                    className="c-field__label c-field__label--block"
                    htmlFor="subjects"
                  />,
                  <div
                    className="c-field__controls"
                  >
                    <TextAreaComponent
                      ariaId=""
                      draftData={undefined}
                      isFromDraftOrReply={true}
                      textData={[Function]}
                    />
                  </div>,
                  undefined,
                ],
                "className": "c-field",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": undefined,
                    "className": "c-field__label c-field__label--block",
                    "htmlFor": "subjects",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "label",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <TextAreaComponent
                      ariaId=""
                      draftData={undefined}
                      isFromDraftOrReply={true}
                      textData={[Function]}
                    />,
                    "className": "c-field__controls",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "ariaId": "",
                      "draftData": undefined,
                      "isFromDraftOrReply": true,
                      "textData": [Function],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
                undefined,
              ],
              "type": "div",
            },
            "",
            false,
            undefined,
            undefined,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Link
                    className="c-btn c-btn--secondary"
                    replace={false}
                    to="undefined/securemessages"
                  >
                    Back
                     
                  </Link>,
                  <button
                    className="c-btn c-btn--secondary"
                    disabled={true}
                    name="Save Draft"
                    onClick={[Function]}
                  />,
                  <button
                    className="c-btn c-btn--default"
                    disabled={true}
                    name="Send"
                    onClick={[Function]}
                  />,
                ],
                "className": "c-btn--group",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      "Back",
                      " ",
                    ],
                    "className": "c-btn c-btn--secondary",
                    "replace": false,
                    "to": "undefined/securemessages",
                  },
                  "ref": null,
                  "rendered": Array [
                    "Back",
                    " ",
                  ],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": undefined,
                    "className": "c-btn c-btn--secondary",
                    "disabled": true,
                    "name": "Save Draft",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "button",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": undefined,
                    "className": "c-btn c-btn--default",
                    "disabled": true,
                    "name": "Send",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "button",
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenFourAdapter {
      "options": Object {
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "prevContext": true,
          },
          "getChildContext": Object {
            "calledByRenderer": true,
          },
        },
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;
