// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SecureMessageSummary snapshot SecureMessageSummary snapshot should match to snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SecureMessageSummary
    content={
      Object {
        "back": "Back",
        "noSpecificAccount": "noSpecificAccount",
      }
    }
    dispatch={[MockFunction]}
    message={
      Object {
        "account": Object {
          "number": "32236",
        },
        "getDateCreated": [MockFunction],
        "getMessageBody": [MockFunction],
        "getReference": [MockFunction],
        "getSubject": [MockFunction],
        "message": "Hello there",
        "status": "READ",
      }
    }
    messageDetail={
      Object {
        "delSuccessModal": true,
        "newMessageError": true,
      }
    }
    messages={
      Object {
        "draftError": true,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <WithTheme(MailItem)
        archiveOnClick={null}
        content={
          Object {
            "back": "Back",
            "noSpecificAccount": "noSpecificAccount",
          }
        }
        deleteOnClick={null}
        dispatch={[MockFunction]}
        id={undefined}
        isArchived={false}
        isRead={true}
        mailDate={undefined}
        mailOnClick={[Function]}
        mailSubject="undefined "
        mailSummary="Hello there"
        message={
          Object {
            "account": Object {
              "number": "32236",
            },
            "getDateCreated": [MockFunction],
            "getMessageBody": [MockFunction],
            "getReference": [MockFunction],
            "getSubject": [MockFunction],
            "message": "Hello there",
            "status": "READ",
          }
        }
        messageDetail={
          Object {
            "delSuccessModal": true,
            "newMessageError": true,
          }
        }
        messages={
          Object {
            "draftError": true,
          }
        }
        moveToInboxOnClick={null}
        replyOnClick={null}
      />,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "archiveOnClick": null,
        "content": Object {
          "back": "Back",
          "noSpecificAccount": "noSpecificAccount",
        },
        "deleteOnClick": null,
        "dispatch": [MockFunction],
        "id": undefined,
        "isArchived": false,
        "isRead": true,
        "mailDate": undefined,
        "mailOnClick": [Function],
        "mailSubject": "undefined ",
        "mailSummary": "Hello there",
        "message": Object {
          "account": Object {
            "number": "32236",
          },
          "getDateCreated": [MockFunction],
          "getMessageBody": [MockFunction],
          "getReference": [MockFunction],
          "getSubject": [MockFunction],
          "message": "Hello there",
          "status": "READ",
        },
        "messageDetail": Object {
          "delSuccessModal": true,
          "newMessageError": true,
        },
        "messages": Object {
          "draftError": true,
        },
        "moveToInboxOnClick": null,
        "replyOnClick": null,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <WithTheme(MailItem)
          archiveOnClick={null}
          content={
            Object {
              "back": "Back",
              "noSpecificAccount": "noSpecificAccount",
            }
          }
          deleteOnClick={null}
          dispatch={[MockFunction]}
          id={undefined}
          isArchived={false}
          isRead={true}
          mailDate={undefined}
          mailOnClick={[Function]}
          mailSubject="undefined "
          mailSummary="Hello there"
          message={
            Object {
              "account": Object {
                "number": "32236",
              },
              "getDateCreated": [MockFunction],
              "getMessageBody": [MockFunction],
              "getReference": [MockFunction],
              "getSubject": [MockFunction],
              "message": "Hello there",
              "status": "READ",
            }
          }
          messageDetail={
            Object {
              "delSuccessModal": true,
              "newMessageError": true,
            }
          }
          messages={
            Object {
              "draftError": true,
            }
          }
          moveToInboxOnClick={null}
          replyOnClick={null}
        />,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "archiveOnClick": null,
          "content": Object {
            "back": "Back",
            "noSpecificAccount": "noSpecificAccount",
          },
          "deleteOnClick": null,
          "dispatch": [MockFunction],
          "id": undefined,
          "isArchived": false,
          "isRead": true,
          "mailDate": undefined,
          "mailOnClick": [Function],
          "mailSubject": "undefined ",
          "mailSummary": "Hello there",
          "message": Object {
            "account": Object {
              "number": "32236",
            },
            "getDateCreated": [MockFunction],
            "getMessageBody": [MockFunction],
            "getReference": [MockFunction],
            "getSubject": [MockFunction],
            "message": "Hello there",
            "status": "READ",
          },
          "messageDetail": Object {
            "delSuccessModal": true,
            "newMessageError": true,
          },
          "messages": Object {
            "draftError": true,
          },
          "moveToInboxOnClick": null,
          "replyOnClick": null,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenFourAdapter {
      "options": Object {
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "prevContext": true,
          },
          "getChildContext": Object {
            "calledByRenderer": true,
          },
        },
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`SecureMessageSummary snapshot SecureMessageSummary snapshot should match to snapshot 2`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SecureMessageSummary
    content={
      Object {
        "back": "Back",
        "noSpecificAccount": "noSpecificAccount",
      }
    }
    dispatch={[MockFunction]}
    message={
      Object {
        "account": Object {
          "number": undefined,
        },
        "getDateCreated": [MockFunction],
        "getMessageBody": [MockFunction],
        "getReference": [MockFunction],
        "getSubject": [MockFunction],
        "message": "Hello there",
        "status": "DRAFT",
      }
    }
    messageDetail={
      Object {
        "delSuccessModal": true,
        "newMessageError": true,
      }
    }
    messages={
      Object {
        "draftError": true,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <WithTheme(MailItem)
        archiveOnClick={null}
        content={
          Object {
            "back": "Back",
            "noSpecificAccount": "noSpecificAccount",
          }
        }
        deleteOnClick={null}
        dispatch={[MockFunction]}
        id={undefined}
        isArchived={false}
        isRead={true}
        mailDate={undefined}
        mailOnClick={[Function]}
        mailSubject="undefined "
        mailSummary="Hello there"
        message={
          Object {
            "account": Object {
              "number": undefined,
            },
            "getDateCreated": [MockFunction],
            "getMessageBody": [MockFunction],
            "getReference": [MockFunction],
            "getSubject": [MockFunction],
            "message": "Hello there",
            "status": "DRAFT",
          }
        }
        messageDetail={
          Object {
            "delSuccessModal": true,
            "newMessageError": true,
          }
        }
        messages={
          Object {
            "draftError": true,
          }
        }
        moveToInboxOnClick={null}
        replyOnClick={null}
      />,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "archiveOnClick": null,
        "content": Object {
          "back": "Back",
          "noSpecificAccount": "noSpecificAccount",
        },
        "deleteOnClick": null,
        "dispatch": [MockFunction],
        "id": undefined,
        "isArchived": false,
        "isRead": true,
        "mailDate": undefined,
        "mailOnClick": [Function],
        "mailSubject": "undefined ",
        "mailSummary": "Hello there",
        "message": Object {
          "account": Object {
            "number": undefined,
          },
          "getDateCreated": [MockFunction],
          "getMessageBody": [MockFunction],
          "getReference": [MockFunction],
          "getSubject": [MockFunction],
          "message": "Hello there",
          "status": "DRAFT",
        },
        "messageDetail": Object {
          "delSuccessModal": true,
          "newMessageError": true,
        },
        "messages": Object {
          "draftError": true,
        },
        "moveToInboxOnClick": null,
        "replyOnClick": null,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <WithTheme(MailItem)
          archiveOnClick={null}
          content={
            Object {
              "back": "Back",
              "noSpecificAccount": "noSpecificAccount",
            }
          }
          deleteOnClick={null}
          dispatch={[MockFunction]}
          id={undefined}
          isArchived={false}
          isRead={true}
          mailDate={undefined}
          mailOnClick={[Function]}
          mailSubject="undefined "
          mailSummary="Hello there"
          message={
            Object {
              "account": Object {
                "number": undefined,
              },
              "getDateCreated": [MockFunction],
              "getMessageBody": [MockFunction],
              "getReference": [MockFunction],
              "getSubject": [MockFunction],
              "message": "Hello there",
              "status": "DRAFT",
            }
          }
          messageDetail={
            Object {
              "delSuccessModal": true,
              "newMessageError": true,
            }
          }
          messages={
            Object {
              "draftError": true,
            }
          }
          moveToInboxOnClick={null}
          replyOnClick={null}
        />,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "archiveOnClick": null,
          "content": Object {
            "back": "Back",
            "noSpecificAccount": "noSpecificAccount",
          },
          "deleteOnClick": null,
          "dispatch": [MockFunction],
          "id": undefined,
          "isArchived": false,
          "isRead": true,
          "mailDate": undefined,
          "mailOnClick": [Function],
          "mailSubject": "undefined ",
          "mailSummary": "Hello there",
          "message": Object {
            "account": Object {
              "number": undefined,
            },
            "getDateCreated": [MockFunction],
            "getMessageBody": [MockFunction],
            "getReference": [MockFunction],
            "getSubject": [MockFunction],
            "message": "Hello there",
            "status": "DRAFT",
          },
          "messageDetail": Object {
            "delSuccessModal": true,
            "newMessageError": true,
          },
          "messages": Object {
            "draftError": true,
          },
          "moveToInboxOnClick": null,
          "replyOnClick": null,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenFourAdapter {
      "options": Object {
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "prevContext": true,
          },
          "getChildContext": Object {
            "calledByRenderer": true,
          },
        },
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`SecureMessageSummary snapshot should match to snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SecureMessageSummary
    content={
      Object {
        "back": "Back",
        "noSpecificAccount": "noSpecificAccount",
      }
    }
    dispatch={[MockFunction]}
    message={
      Object {
        "account": Object {
          "number": "32236",
        },
        "getDateCreated": [MockFunction],
        "getMessageBody": [MockFunction],
        "getReference": [MockFunction],
        "getSubject": [MockFunction],
        "message": "Hello there",
        "status": "NEW",
      }
    }
    messageDetail={
      Object {
        "delSuccessModal": true,
        "newMessageError": true,
      }
    }
    messages={
      Object {
        "draftError": true,
      }
    }
    viewMessageFlag={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <WithTheme(MailItem)
        archiveOnClick={null}
        content={
          Object {
            "back": "Back",
            "noSpecificAccount": "noSpecificAccount",
          }
        }
        deleteOnClick={null}
        dispatch={[MockFunction]}
        id={undefined}
        isArchived={false}
        isRead={false}
        mailDate={undefined}
        mailOnClick={[Function]}
        mailSubject="undefined "
        mailSummary="Hello there"
        message={
          Object {
            "account": Object {
              "number": "32236",
            },
            "getDateCreated": [MockFunction],
            "getMessageBody": [MockFunction],
            "getReference": [MockFunction],
            "getSubject": [MockFunction],
            "message": "Hello there",
            "status": "NEW",
          }
        }
        messageDetail={
          Object {
            "delSuccessModal": true,
            "newMessageError": true,
          }
        }
        messages={
          Object {
            "draftError": true,
          }
        }
        moveToInboxOnClick={null}
        replyOnClick={null}
        viewMessageFlag={true}
      />,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "archiveOnClick": null,
        "content": Object {
          "back": "Back",
          "noSpecificAccount": "noSpecificAccount",
        },
        "deleteOnClick": null,
        "dispatch": [MockFunction],
        "id": undefined,
        "isArchived": false,
        "isRead": false,
        "mailDate": undefined,
        "mailOnClick": [Function],
        "mailSubject": "undefined ",
        "mailSummary": "Hello there",
        "message": Object {
          "account": Object {
            "number": "32236",
          },
          "getDateCreated": [MockFunction],
          "getMessageBody": [MockFunction],
          "getReference": [MockFunction],
          "getSubject": [MockFunction],
          "message": "Hello there",
          "status": "NEW",
        },
        "messageDetail": Object {
          "delSuccessModal": true,
          "newMessageError": true,
        },
        "messages": Object {
          "draftError": true,
        },
        "moveToInboxOnClick": null,
        "replyOnClick": null,
        "viewMessageFlag": true,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <WithTheme(MailItem)
          archiveOnClick={null}
          content={
            Object {
              "back": "Back",
              "noSpecificAccount": "noSpecificAccount",
            }
          }
          deleteOnClick={null}
          dispatch={[MockFunction]}
          id={undefined}
          isArchived={false}
          isRead={false}
          mailDate={undefined}
          mailOnClick={[Function]}
          mailSubject="undefined "
          mailSummary="Hello there"
          message={
            Object {
              "account": Object {
                "number": "32236",
              },
              "getDateCreated": [MockFunction],
              "getMessageBody": [MockFunction],
              "getReference": [MockFunction],
              "getSubject": [MockFunction],
              "message": "Hello there",
              "status": "NEW",
            }
          }
          messageDetail={
            Object {
              "delSuccessModal": true,
              "newMessageError": true,
            }
          }
          messages={
            Object {
              "draftError": true,
            }
          }
          moveToInboxOnClick={null}
          replyOnClick={null}
          viewMessageFlag={true}
        />,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "archiveOnClick": null,
          "content": Object {
            "back": "Back",
            "noSpecificAccount": "noSpecificAccount",
          },
          "deleteOnClick": null,
          "dispatch": [MockFunction],
          "id": undefined,
          "isArchived": false,
          "isRead": false,
          "mailDate": undefined,
          "mailOnClick": [Function],
          "mailSubject": "undefined ",
          "mailSummary": "Hello there",
          "message": Object {
            "account": Object {
              "number": "32236",
            },
            "getDateCreated": [MockFunction],
            "getMessageBody": [MockFunction],
            "getReference": [MockFunction],
            "getSubject": [MockFunction],
            "message": "Hello there",
            "status": "NEW",
          },
          "messageDetail": Object {
            "delSuccessModal": true,
            "newMessageError": true,
          },
          "messages": Object {
            "draftError": true,
          },
          "moveToInboxOnClick": null,
          "replyOnClick": null,
          "viewMessageFlag": true,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenFourAdapter {
      "options": Object {
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "prevContext": true,
          },
          "getChildContext": Object {
            "calledByRenderer": true,
          },
        },
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;
