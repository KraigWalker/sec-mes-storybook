// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ModalComponent Component Check should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ModalComponent
    backdrop={true}
    closeButton={true}
    modalInContainer={false}
    modalbody=""
    modalfooter=""
    modalheading=""
    onHide={[Function]}
    scope={undefined}
    show={false}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "animation": true,
      "autoFocus": true,
      "backdrop": true,
      "bsClass": "modal",
      "bsSize": undefined,
      "children": Array [
        <ModalHeader
          bsClass="modal-header"
          className="c-modal__header"
          closeButton={true}
          closeLabel="Close"
        >
          <ModalTitle
            bsClass="modal-title"
            className="c-modal__title"
            componentClass="h2"
            id="contained-modal-title-lg"
          >
            
          </ModalTitle>
        </ModalHeader>,
        <ModalBody
          bsClass="modal-body"
          className="c-modal__body"
          componentClass="div"
        >
          
        </ModalBody>,
        <ModalFooter
          bsClass="modal-footer"
          className="c-modal__footer"
          componentClass="div"
        >
          
        </ModalFooter>,
      ],
      "className": undefined,
      "container": undefined,
      "dialogComponentClass": [Function],
      "enforceFocus": true,
      "keyboard": true,
      "manager": ModalManager {
        "add": [Function],
        "containers": Array [],
        "data": Array [],
        "handleContainerOverflow": true,
        "hideSiblingNodes": true,
        "isTopModal": [Function],
        "modals": Array [],
        "remove": [Function],
      },
      "modalfooter": "",
      "modalheading": "",
      "onHide": [Function],
      "renderBackdrop": [Function],
      "restoreFocus": true,
      "show": false,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "bsClass": "modal-header",
          "children": <ModalTitle
            bsClass="modal-title"
            className="c-modal__title"
            componentClass="h2"
            id="contained-modal-title-lg"
          >
            
          </ModalTitle>,
          "className": "c-modal__header",
          "closeButton": true,
          "closeLabel": "Close",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bsClass": "modal-title",
            "children": "",
            "className": "c-modal__title",
            "componentClass": "h2",
            "id": "contained-modal-title-lg",
          },
          "ref": null,
          "rendered": "",
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "bsClass": "modal-body",
          "children": "",
          "className": "c-modal__body",
          "componentClass": "div",
        },
        "ref": null,
        "rendered": "",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "bsClass": "modal-footer",
          "children": "",
          "className": "c-modal__footer",
          "componentClass": "div",
        },
        "ref": null,
        "rendered": "",
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "animation": true,
        "autoFocus": true,
        "backdrop": true,
        "bsClass": "modal",
        "bsSize": undefined,
        "children": Array [
          <ModalHeader
            bsClass="modal-header"
            className="c-modal__header"
            closeButton={true}
            closeLabel="Close"
          >
            <ModalTitle
              bsClass="modal-title"
              className="c-modal__title"
              componentClass="h2"
              id="contained-modal-title-lg"
            >
              
            </ModalTitle>
          </ModalHeader>,
          <ModalBody
            bsClass="modal-body"
            className="c-modal__body"
            componentClass="div"
          >
            
          </ModalBody>,
          <ModalFooter
            bsClass="modal-footer"
            className="c-modal__footer"
            componentClass="div"
          >
            
          </ModalFooter>,
        ],
        "className": undefined,
        "container": undefined,
        "dialogComponentClass": [Function],
        "enforceFocus": true,
        "keyboard": true,
        "manager": ModalManager {
          "add": [Function],
          "containers": Array [],
          "data": Array [],
          "handleContainerOverflow": true,
          "hideSiblingNodes": true,
          "isTopModal": [Function],
          "modals": Array [],
          "remove": [Function],
        },
        "modalfooter": "",
        "modalheading": "",
        "onHide": [Function],
        "renderBackdrop": [Function],
        "restoreFocus": true,
        "show": false,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bsClass": "modal-header",
            "children": <ModalTitle
              bsClass="modal-title"
              className="c-modal__title"
              componentClass="h2"
              id="contained-modal-title-lg"
            >
              
            </ModalTitle>,
            "className": "c-modal__header",
            "closeButton": true,
            "closeLabel": "Close",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bsClass": "modal-title",
              "children": "",
              "className": "c-modal__title",
              "componentClass": "h2",
              "id": "contained-modal-title-lg",
            },
            "ref": null,
            "rendered": "",
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bsClass": "modal-body",
            "children": "",
            "className": "c-modal__body",
            "componentClass": "div",
          },
          "ref": null,
          "rendered": "",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bsClass": "modal-footer",
            "children": "",
            "className": "c-modal__footer",
            "componentClass": "div",
          },
          "ref": null,
          "rendered": "",
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenFourAdapter {
      "options": Object {
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "prevContext": true,
          },
          "getChildContext": Object {
            "calledByRenderer": true,
          },
        },
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;
